## Environment

* Python 3.6+


### Installation

#### Standard install with Pip

* Create a (virtual environment)[https://docs.python.org/3/tutorial/venv.html] (optional, but strongly recommended)
  * `$ mkdir wakevote`
  * `$ cd wakevote`
  * `$ python -m venv .venv`
  * `$ source bin/activate` (while virtual env is active, `pip` will install into it)
* Install with Pip `pip install -e git+git@github.com:14-cities/wakethevote.git#egg=wakevote`
* Confirm installation worked by running the CLI `$ wakevote --help`

#### For Development

* Clone the repo `$ git clone https://github.com/14-cities/WakeVoter.git`
* Install [Poetry](https://python-poetry.org/docs/) if needed 
* Install requirements with Poetry `$ poetry install`
* Request an [API key](https://api.census.gov/data/key_signup.html) from  the US Census
* Create a `.env` file with `CENSUS_API_KEY={your key}` in the root of the project or include `CENSUS_API_KEY={your key}` when calling the Wake Vote CLI

#### OS Specific troubleshooting

* On **Mac OS X**, if you get the error `OSError: Could not find libspatialindex_c library file` you may need to run `$ brew install spatialindex` to get rtree working properly. See this [GitHub issue](https://github.com/gboeing/osmnx/issues/45)

* On **Ubuntu 18.04**, if you get the missing libspatial error, `$ apt install libspatialindex-c4v5 libspatialindex-dev libspatialindex4v5` or just `apt install python3-rtree` and it will pull those in as dependencies.


## Using the Wake Vote CLI

Once installed, the WakeVote CLI can be invoked with the command `$ wakevote` and it can perform three different actions.
* `--download` is used to download the shapefiles for all counties that match the results.
* `--preview` is used to preview a shapefile in a webbrowser
* `--export` is used to export a single GeoJSON file from all the shapefiles downloaded with the `--download` flag

For all three options, you can pass the two digit FIP code or two letter state abbreviation to act on an entire state. To download, preview, or export individual counties, you can pass in either the county name or the county FIPS code, but be aware that some county names are ambiguous and may act on more counties than intended. If multiple states have the same county name, you may specify both the county and state together wrapped in quotes.

Examples:

* `$ wakevote --download NC` will download data for all counties in North Carolina
* `$ wakevote --download 37` will download data for all counties in North Carolina
* `$ wakevote --download 37183` will download data for Wake county in NC
* `$ wakevote --download Lee` will download data for all counties named Lee (13 results!)
* `$ wakevote --download Lee GA` will download data for all counties named Lee AND all counties in GA
* `$ wakevote --download "Lee GA"` will download data for ONLY Lee county in GA
* `$ wakevote --download "Lee GA" "Wake NC"` will download data for Lee county in GA and Wake county in NC
* `$ wakevote --download NC PA FL` will download data for all three states
* `$ wakevote --preview "Wake NC"` will open a webbrowser with a preview of Wake county North Caroina

The CLI can also be invoked by calling the CLI script directly with `$ python src/wakethevote/cli.py`


## Data

#### 2010 Census Blocks 

* [Block features with population & housing data](https://www2.census.gov/geo/tiger/TIGER2010BLKPOPHU/tabblock2010_37_pophu.zip)
* Demographic data
  * https://factfinder.census.gov/faces/nav/jsf/pages/searchresults.xhtml?refresh=t
  * Geographies: 
    * All geographic types
    * Geographic type: `.... .... .... Block - 100`
    * Geographic vintage: `2010`
    * State: `North Carolina`
    * County: `Wake`
    * Census tract: 
    * Select one ore more
  * Topics: 
    * P1: Race
    * P10: Race for population 18 and over

Address points

* https://s3.amazonaws.com/dl.ncsbe.gov/ShapeFiles/list.html
* https://dl.ncsbe.gov/index.html?prefix=ShapeFiles/
* https://s3.amazonaws.com/dl.ncsbe.gov/ShapeFiles/address_points_sboe.zip
